version: '3.8'

services:
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: senha
      MONGO_INITDB_DATABASE: admin
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8090:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: senha
      ME_CONFIG_MONGODB_URL: mongodb://root:senha@mongo:27017/
      ME_CONFIG_BASICAUTH_ENABLED: false
      ME_CONFIG_BASICAUTH_USERNAME:  root
      ME_CONFIG_BASICAUTH_PASSWORD:  senha
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_SERVER: mongo

  grupo-5-service:
    build: ./web/grupo-5
    container_name: grupo-5-container
    ports:
      - "8005:8085"
    volumes:
      - ./web/grupo-5:/app

  grupo-5-api:
    build: ./api/grupo-5
    container_name: grupo-5-api-container
    ports:
      - "3005:3005"
    volumes:
      - ./api/grupo-5:/app
      - ./api/grupo-5/uploads:/app/uploads
    env_file:
      - ./.env.grupo5
    environment:
      - MONGODB_URL=${MONGODB_URL:-mongodb://root:senha@mongo:27017/}

  backend-image:
    build:
      context: ./api-ia/backend-image
      dockerfile: Dockerfile
    ports:
      - 9005:9001
    develop:
      watch:
      - action: sync
        path: ./api-ia/backend-image/images/webservice.py
        target: images/webservice.py
      - action: rebuild
        path: ./api-ia/backend-image/requirements.txt
    volumes:
      - ./api-ia/backend-image/images:/images